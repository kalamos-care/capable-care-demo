/*
 * Capable Health API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
import { ApiClient } from "../ApiClient";

/**
 * The TenantAdminsinviteTenantAdmin model module.
 * @module model/TenantAdminsinviteTenantAdmin
 * @version v0.3
 */
export class TenantAdminsinviteTenantAdmin {
  /**
   * Constructs a new <code>TenantAdminsinviteTenantAdmin</code>.
   * @alias module:model/TenantAdminsinviteTenantAdmin
   * @class
   * @param email {String}
   */
  constructor(email) {
    this.email = email;
  }

  /**
   * Constructs a <code>TenantAdminsinviteTenantAdmin</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TenantAdminsinviteTenantAdmin} obj Optional instance to populate.
   * @return {module:model/TenantAdminsinviteTenantAdmin} The populated <code>TenantAdminsinviteTenantAdmin</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TenantAdminsinviteTenantAdmin();
      if (data.hasOwnProperty("email"))
        obj.email = ApiClient.convertToType(data["email"], "String");
      if (data.hasOwnProperty("first_name"))
        obj.firstName = ApiClient.convertToType(data["first_name"], "String");
      if (data.hasOwnProperty("middle_name"))
        obj.middleName = ApiClient.convertToType(data["middle_name"], "String");
      if (data.hasOwnProperty("last_name"))
        obj.lastName = ApiClient.convertToType(data["last_name"], "String");
      if (data.hasOwnProperty("birth_date"))
        obj.birthDate = ApiClient.convertToType(data["birth_date"], "Date");
      if (data.hasOwnProperty("gender_identity"))
        obj.genderIdentity = ApiClient.convertToType(data["gender_identity"], "String");
      if (data.hasOwnProperty("administrative_gender"))
        obj.administrativeGender = ApiClient.convertToType(data["administrative_gender"], "String");
      if (data.hasOwnProperty("external_id"))
        obj.externalId = ApiClient.convertToType(data["external_id"], "String");
      if (data.hasOwnProperty("confirmation_url"))
        obj.confirmationUrl = ApiClient.convertToType(data["confirmation_url"], "String");
      if (data.hasOwnProperty("tenant_id"))
        obj.tenantId = ApiClient.convertToType(data["tenant_id"], "String");
      if (data.hasOwnProperty("metadata"))
        obj.metadata = ApiClient.convertToType(data["metadata"], { String: Object });
    }
    return obj;
  }
}

/**
 * @member {String} email
 */
TenantAdminsinviteTenantAdmin.prototype.email = undefined;

/**
 * @member {String} firstName
 */
TenantAdminsinviteTenantAdmin.prototype.firstName = undefined;

/**
 * @member {String} middleName
 */
TenantAdminsinviteTenantAdmin.prototype.middleName = undefined;

/**
 * @member {String} lastName
 */
TenantAdminsinviteTenantAdmin.prototype.lastName = undefined;

/**
 * yyyy-mm-dd (ISO 8601)
 * @member {Date} birthDate
 */
TenantAdminsinviteTenantAdmin.prototype.birthDate = undefined;

/**
 * Allowed values for the <code>genderIdentity</code> property.
 * @enum {String}
 * @readonly
 */
TenantAdminsinviteTenantAdmin.GenderIdentityEnum = {
  /**
   * value: "female"
   * @const
   */
  female: "female",

  /**
   * value: "male"
   * @const
   */
  male: "male",

  /**
   * value: "non_binary"
   * @const
   */
  nonBinary: "non_binary",

  /**
   * value: "non_disclose"
   * @const
   */
  nonDisclose: "non_disclose",

  /**
   * value: "other"
   * @const
   */
  other: "other",

  /**
   * value: "transgender_female"
   * @const
   */
  transgenderFemale: "transgender_female",

  /**
   * value: "transgender_male"
   * @const
   */
  transgenderMale: "transgender_male",
};
/**
 * The gender the user identifies with.
 * @member {module:model/TenantAdminsinviteTenantAdmin.GenderIdentityEnum} genderIdentity
 */
TenantAdminsinviteTenantAdmin.prototype.genderIdentity = undefined;

/**
 * Allowed values for the <code>administrativeGender</code> property.
 * @enum {String}
 * @readonly
 */
TenantAdminsinviteTenantAdmin.AdministrativeGenderEnum = {
  /**
   * value: "unknown"
   * @const
   */
  unknown: "unknown",

  /**
   * value: "male"
   * @const
   */
  male: "male",

  /**
   * value: "female"
   * @const
   */
  female: "female",

  /**
   * value: "not_applicable"
   * @const
   */
  notApplicable: "not_applicable",
};
/**
 * The gender of a person used for administrative purposes.
 * @member {module:model/TenantAdminsinviteTenantAdmin.AdministrativeGenderEnum} administrativeGender
 */
TenantAdminsinviteTenantAdmin.prototype.administrativeGender = undefined;

/**
 * @member {String} externalId
 */
TenantAdminsinviteTenantAdmin.prototype.externalId = undefined;

/**
 * @member {String} confirmationUrl
 */
TenantAdminsinviteTenantAdmin.prototype.confirmationUrl = undefined;

/**
 * @member {String} tenantId
 */
TenantAdminsinviteTenantAdmin.prototype.tenantId = undefined;

/**
 * Any JSON-formatted data you want to associate with this object
 * @member {Object.<String, Object>} metadata
 */
TenantAdminsinviteTenantAdmin.prototype.metadata = undefined;
