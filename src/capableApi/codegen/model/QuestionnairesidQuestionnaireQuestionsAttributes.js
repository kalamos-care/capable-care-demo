/*
 * Capable Health API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
import { ApiClient } from "../ApiClient";
import { QuestionnairesidQuestionnaireAnswersAttributes } from "./QuestionnairesidQuestionnaireAnswersAttributes";

/**
 * The QuestionnairesidQuestionnaireQuestionsAttributes model module.
 * @module model/QuestionnairesidQuestionnaireQuestionsAttributes
 * @version v0.3
 */
export class QuestionnairesidQuestionnaireQuestionsAttributes {
  /**
   * Constructs a new <code>QuestionnairesidQuestionnaireQuestionsAttributes</code>.
   * @alias module:model/QuestionnairesidQuestionnaireQuestionsAttributes
   * @class
   */
  constructor() {}

  /**
   * Constructs a <code>QuestionnairesidQuestionnaireQuestionsAttributes</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/QuestionnairesidQuestionnaireQuestionsAttributes} obj Optional instance to populate.
   * @return {module:model/QuestionnairesidQuestionnaireQuestionsAttributes} The populated <code>QuestionnairesidQuestionnaireQuestionsAttributes</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new QuestionnairesidQuestionnaireQuestionsAttributes();
      if (data.hasOwnProperty("title"))
        obj.title = ApiClient.convertToType(data["title"], "String");
      if (data.hasOwnProperty("position"))
        obj.position = ApiClient.convertToType(data["position"], "Number");
      if (data.hasOwnProperty("status"))
        obj.status = ApiClient.convertToType(data["status"], "String");
      if (data.hasOwnProperty("type")) obj.type = ApiClient.convertToType(data["type"], "String");
      if (data.hasOwnProperty("id")) obj.id = ApiClient.convertToType(data["id"], "String");
      if (data.hasOwnProperty("external_id"))
        obj.externalId = ApiClient.convertToType(data["external_id"], "String");
      if (data.hasOwnProperty("external_source"))
        obj.externalSource = ApiClient.convertToType(data["external_source"], "String");
      if (data.hasOwnProperty("required"))
        obj.required = ApiClient.convertToType(data["required"], "Boolean");
      if (data.hasOwnProperty("observation_type_id"))
        obj.observationTypeId = ApiClient.convertToType(data["observation_type_id"], "String");
      if (data.hasOwnProperty("metadata"))
        obj.metadata = ApiClient.convertToType(data["metadata"], { String: Object });
      if (data.hasOwnProperty("answers_attributes"))
        obj.answersAttributes = ApiClient.convertToType(data["answers_attributes"], [
          QuestionnairesidQuestionnaireAnswersAttributes,
        ]);
    }
    return obj;
  }
}

/**
 * @member {String} title
 */
QuestionnairesidQuestionnaireQuestionsAttributes.prototype.title = undefined;

/**
 * @member {Number} position
 */
QuestionnairesidQuestionnaireQuestionsAttributes.prototype.position = undefined;

/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
QuestionnairesidQuestionnaireQuestionsAttributes.StatusEnum = {
  /**
   * value: "active"
   * @const
   */
  active: "active",

  /**
   * value: "archived"
   * @const
   */
  archived: "archived",
};
/**
 * @member {module:model/QuestionnairesidQuestionnaireQuestionsAttributes.StatusEnum} status
 */
QuestionnairesidQuestionnaireQuestionsAttributes.prototype.status = undefined;

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
QuestionnairesidQuestionnaireQuestionsAttributes.TypeEnum = {
  /**
   * value: "CommentQuestion"
   * @const
   */
  commentQuestion: "CommentQuestion",

  /**
   * value: "MultipleChoiceQuestion"
   * @const
   */
  multipleChoiceQuestion: "MultipleChoiceQuestion",

  /**
   * value: "EmailQuestion"
   * @const
   */
  emailQuestion: "EmailQuestion",

  /**
   * value: "HiddenQuestion"
   * @const
   */
  hiddenQuestion: "HiddenQuestion",

  /**
   * value: "InformationQuestion"
   * @const
   */
  informationQuestion: "InformationQuestion",

  /**
   * value: "NumberQuestion"
   * @const
   */
  numberQuestion: "NumberQuestion",

  /**
   * value: "PhoneNumberQuestion"
   * @const
   */
  phoneNumberQuestion: "PhoneNumberQuestion",

  /**
   * value: "ScaleQuestion"
   * @const
   */
  scaleQuestion: "ScaleQuestion",

  /**
   * value: "SingleChoiceQuestion"
   * @const
   */
  singleChoiceQuestion: "SingleChoiceQuestion",

  /**
   * value: "UploadQuestion"
   * @const
   */
  uploadQuestion: "UploadQuestion",

  /**
   * value: "DateQuestion"
   * @const
   */
  dateQuestion: "DateQuestion",

  /**
   * value: "MultiTextQuestion"
   * @const
   */
  multiTextQuestion: "MultiTextQuestion",
};
/**
 * @member {module:model/QuestionnairesidQuestionnaireQuestionsAttributes.TypeEnum} type
 */
QuestionnairesidQuestionnaireQuestionsAttributes.prototype.type = undefined;

/**
 * Specify the questions_attributes ID if you want to update the resource
 * @member {String} id
 */
QuestionnairesidQuestionnaireQuestionsAttributes.prototype.id = undefined;

/**
 * @member {String} externalId
 */
QuestionnairesidQuestionnaireQuestionsAttributes.prototype.externalId = undefined;

/**
 * Allowed values for the <code>externalSource</code> property.
 * @enum {String}
 * @readonly
 */
QuestionnairesidQuestionnaireQuestionsAttributes.ExternalSourceEnum = {
  /**
   * value: "FormSort"
   * @const
   */
  formSort: "FormSort",

  /**
   * value: "null"
   * @const
   */
  _null: "null",
};
/**
 * @member {module:model/QuestionnairesidQuestionnaireQuestionsAttributes.ExternalSourceEnum} externalSource
 */
QuestionnairesidQuestionnaireQuestionsAttributes.prototype.externalSource = undefined;

/**
 * Indicates whether a response to this question is required for the submission to be completed
 * @member {Boolean} required
 */
QuestionnairesidQuestionnaireQuestionsAttributes.prototype.required = undefined;

/**
 * Associate an observation type if you need the patient response to automatically populate an observation with the response value in the completed submission.
 * @member {String} observationTypeId
 */
QuestionnairesidQuestionnaireQuestionsAttributes.prototype.observationTypeId = undefined;

/**
 * Any JSON-formatted data you want to associate with this object
 * @member {Object.<String, Object>} metadata
 */
QuestionnairesidQuestionnaireQuestionsAttributes.prototype.metadata = undefined;

/**
 * @member {Array.<module:model/QuestionnairesidQuestionnaireAnswersAttributes>} answersAttributes
 */
QuestionnairesidQuestionnaireQuestionsAttributes.prototype.answersAttributes = undefined;
