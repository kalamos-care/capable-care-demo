/*
 * Capable Health API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
import { ApiClient } from "../ApiClient";
import { EncountersidEncounterNotesAttributes } from "./EncountersidEncounterNotesAttributes";

/**
 * The EncountersidEncounter model module.
 * @module model/EncountersidEncounter
 * @version v0.3
 */
export class EncountersidEncounter {
  /**
   * Constructs a new <code>EncountersidEncounter</code>.
   * @alias module:model/EncountersidEncounter
   * @class
   */
  constructor() {}

  /**
   * Constructs a <code>EncountersidEncounter</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EncountersidEncounter} obj Optional instance to populate.
   * @return {module:model/EncountersidEncounter} The populated <code>EncountersidEncounter</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new EncountersidEncounter();
      if (data.hasOwnProperty("start_on"))
        obj.startOn = ApiClient.convertToType(data["start_on"], "String");
      if (data.hasOwnProperty("end_on"))
        obj.endOn = ApiClient.convertToType(data["end_on"], "String");
      if (data.hasOwnProperty("source"))
        obj.source = ApiClient.convertToType(data["source"], "String");
      if (data.hasOwnProperty("patient_id"))
        obj.patientId = ApiClient.convertToType(data["patient_id"], "String");
      if (data.hasOwnProperty("practitioner_id"))
        obj.practitionerId = ApiClient.convertToType(data["practitioner_id"], "String");
      if (data.hasOwnProperty("notes_attributes"))
        obj.notesAttributes = ApiClient.convertToType(data["notes_attributes"], [
          EncountersidEncounterNotesAttributes,
        ]);
    }
    return obj;
  }
}

/**
 * Date of the start of the encounter
 * @member {String} startOn
 */
EncountersidEncounter.prototype.startOn = undefined;

/**
 * Date of the end of the encounter
 * @member {String} endOn
 */
EncountersidEncounter.prototype.endOn = undefined;

/**
 * Allowed values for the <code>source</code> property.
 * @enum {String}
 * @readonly
 */
EncountersidEncounter.SourceEnum = {
  /**
   * value: "messaging"
   * @const
   */
  messaging: "messaging",

  /**
   * value: "video_call"
   * @const
   */
  videoCall: "video_call",

  /**
   * value: "phone_call"
   * @const
   */
  phoneCall: "phone_call",

  /**
   * value: "in_person"
   * @const
   */
  inPerson: "in_person",

  /**
   * value: "external_provider"
   * @const
   */
  externalProvider: "external_provider",
};
/**
 * Source of how the encounter started
 * @member {module:model/EncountersidEncounter.SourceEnum} source
 */
EncountersidEncounter.prototype.source = undefined;

/**
 * ID of the patient whom this observation is associated with
 * @member {String} patientId
 */
EncountersidEncounter.prototype.patientId = undefined;

/**
 * ID of the practitioner whom this observation is associated with
 * @member {String} practitionerId
 */
EncountersidEncounter.prototype.practitionerId = undefined;

/**
 * @member {Array.<module:model/EncountersidEncounterNotesAttributes>} notesAttributes
 */
EncountersidEncounter.prototype.notesAttributes = undefined;
